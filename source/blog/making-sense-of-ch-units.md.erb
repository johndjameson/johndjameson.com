---
title: Making Sense of Ch Units
type: post
layout: article
codepen: true
date: 2015-09-16
description: "Try using ch units with most fonts, and things will probably start breaking. These are the problems you might come across and the ways to fix them."
---

Ch units can be an [invaluable tool][typographic-units] when you're working with monospaced fonts. For example, you can declare `width: 60ch` on an element and it'll be the perfect size to fit 60 characters per line of text.

But when using ch units with non-monospaced (proportional) fonts, you'll encounter some unexpected results. The same width of `60ch` on a container _should_ work, but it doesn't. You'll end up with somewhere around 70 or 75 characters per line.

So what causes them to be so inaccurate?

It comes down to the defintion of a ch unit. According to the spec, a ch unit is equal to the width of the 0 (zero) glyph found in the font used to render it. This definition works for monospaced fonts (where every glyph shares an identical width), but it's completely unreliable for proportional fonts. On average, a ch unit ends up being 15–30% larger than the width of a font's other glyphs.

<%= partial 'shared/codepen', locals: { pen: '24f0cb69d20658c4b14f6fef8e32ce59', height: 540 } %>

See the problem? When compared to a line of zeros, ch units perform _exactly_ as the specification defines them. But when compared to a line of text, ch units are way too wide to be useful.

So let's fix the problem
------------------------

Ch units are still worth using, but it'll take some math to get them working with proportional fonts.

Let's say you have a 1000-character-long line of text and an element with a width of `1000ch`. Like in the demo above, the line of text will be shorter than the same number of ch units. But you can divide the line of text's width by the ch units' width to calculate a ratio that makes up for the discrepency. The number you'll end up with is usually in the 0.75–0.85 range for non-monospaced fonts.

<%= partial 'shared/codepen', locals: { pen: 'c41229e9197ff46d987dceffb4f36b38', height: 470 } %>

The more text there is, the more reliable the ratio becomes.

<%= partial 'shared/codepen', locals: { pen: 'a6c07f62eb3d33741effa552b22abd84', height: 340 } %>

Takeaways
---------

Ch units have a lot of interesting potential once you get past their quirks. They're _invaluable_ tools when working with monospaced fonts, and if you're willing to take a few measurements and calculate a couple ratios, they're _excellent_ for proportional fonts, too.

Send me a message on [Twitter][twitter] if you have any questions or feedback — or if you just want to geek out over web typography.

[twitter]: https://twitter.com/johndjameson
[typographic-units]: /blog/typographic-units-in-css.html#ch-units
